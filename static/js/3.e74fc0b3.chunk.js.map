{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength150","maxLengthCreator","AddMessageFormReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessageText","newMessageBody","compose","dispatch","sendMessageTextCreator"],"mappings":"4OAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAQtC,OAAOM,YAAQX,EAARW,CAAoCL,K,oBChB/CM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCAnND,EAAOC,QAAU,CAAC,aAAe,iCAAiC,OAAS,6B,oBCA3ED,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,2B,6GCYlDC,EATI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASX,GAAIM,EAAb,SAAoBP,EAAMa,U,kBCGvBC,EARC,SAACd,GACb,OACI,qBAAKS,UAAWC,IAAEK,QAAlB,SACKf,EAAMe,W,kCCEbC,EAAeC,YAAiB,KA8ChCC,EAA0BC,YAAU,CAACC,KAAM,wBAAjBD,EAlBT,SAACnB,GACpB,OACI,uBAAMqB,SAAUrB,EAAMsB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIV,KAAM,iBACNW,UAAWC,IACXC,YAAa,qBACbC,SAAU,CAACC,IAAUZ,OAG7B,8BACI,kDAQDa,EA9CC,SAAC7B,GAEb,IAAIP,EAAQO,EAAM8B,YAEdC,EAAkBtC,EAAMuC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBL,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,OAC1E2B,EAAmB1C,EAAM2C,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAAoBP,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,OAMnF,OACI,sBAAKC,UAAWC,IAAEsB,QAAlB,UACI,qBAAKvB,UAAWC,IAAE4B,aAAlB,SACKP,IAEL,sBAAKtB,UAAWC,IAAE0B,SAAlB,UACI,8BAAMD,IACN,8BACI,cAACjB,EAAD,CAAyBG,SAZnB,SAACkB,GACnBvC,EAAMwC,gBAAgBD,EAAOE,4B,wBCItBC,sBACXvC,aAhBkB,SAACV,GACnB,MAAO,CACHqC,YAAarC,EAAMqC,YACnBpC,OAAQD,EAAME,KAAKD,WAIF,SAACiD,GACtB,MAAO,CACHH,gBAAiB,SAACC,GACdE,EAASC,YAAuBH,SAOxC7C,IAFW8C,CAGbb","file":"static/js/3.e74fc0b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props} />\r\n\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1UQ64\",\"dialogsItems\":\"Dialogs_dialogsItems__2gG92\",\"active\":\"Dialogs_active__ehs36\",\"dialog\":\"Dialogs_dialog__1BcIc\",\"messages\":\"Dialogs_messages__3KTcx\",\"message\":\"Dialogs_message__LE8IV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__3Dw2p\",\"active\":\"DialogItem_active__1JorH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__2wDqw\",\"message\":\"Message_message__P248B\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utilities/validators/validators\";\r\n\r\nconst maxLength150 = maxLengthCreator(150)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} id={m.id}/>)\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessageText(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <AddMessageFormReduxForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name={'newMessageBody'}\r\n                    component={Textarea}\r\n                    placeholder={'Enter your message'}\r\n                    validate={[required, maxLength150]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport {sendMessageTextCreator} from \"../../redux/dialogs-reducer\"\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessageText: (newMessageBody) => {\r\n            dispatch(sendMessageTextCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}