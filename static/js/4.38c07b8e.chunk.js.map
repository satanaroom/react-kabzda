{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","componentDidUpdate","prevProps","prevState","autoFocus","onBlur","onChange","onDoubleClick","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","contactsContainer","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","Post","item","message","like","maxLength15","maxLengthCreator","MyPosts","memo","postsElements","posts","reverse","map","p","likesCount","id","postsBlock","ProfileReduxForm","onSubmit","values","addPost","newPostElement","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","profilePage","newPostText","dispatch","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/4.38c07b8e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props} />\r\n\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__2nXRZ\",\"avatar\":\"ProfileInfo_avatar__2LgQP\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2OWKZ\",\"contactsContainer\":\"ProfileInfo_contactsContainer__ohSJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1R5Hl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__W60kl\",\"posts\":\"MyPosts_posts__1qQny\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode\r\n                    ? <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || 'Create your status!'}</span>\r\n                    </div>\r\n                    : <div>\r\n                        <input\r\n                            value={this.state.status}\r\n                            autoFocus={true}\r\n                            onBlur={this.deactivateEditMode}\r\n                            onChange={this.onStatusChange}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt={'Photos: large users photo'}/>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n                <div> My contacts:\r\n                    <ul className={s.contactsContainer}>\r\n                        <li>{props.profile.contacts.facebook}</li>\r\n                        <li>{props.profile.contacts.website}</li>\r\n                        <li>{props.profile.contacts.vk}</li>\r\n                        <li>{props.profile.contacts.twitter}</li>\r\n                        <li>{props.profile.contacts.instagram}</li>\r\n                        <li>{props.profile.contacts.youtube}</li>\r\n                        <li>{props.profile.contacts.github}</li>\r\n                        <li>{props.profile.contacts.mainLink}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={'https://www.ejin.ru/wp-content/uploads/2018/10/crew4_1024.png'} alt={'avatar'}/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.like}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilities/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength15 = maxLengthCreator(15)\r\n\r\nconst MyPosts= React.memo(props => {\r\n    // Вместо PureComponent можно использовать Memo, отходя от классов\r\n    // class MyPosts extends PureComponent {\r\n    // shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    //     return nextProps !== this.props || nextState !== this.state\r\n    // }\r\n\r\n    //Пример как можно перевернуть массив,\r\n    //работая только с его копией\r\n    const postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} like={p.likesCount} key={p.id}\r\n                                                     id={p.id}/>)\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostElement)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>MyPosts</h3>\r\n            <ProfileReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name={'newPostElement'}\r\n                    component={Textarea}\r\n                    placeholder={'Add new post'}\r\n                    validate={[required, maxLength15]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileReduxForm = reduxForm({form: 'profileAddPostForm'})(AddPostForm)\r\n\r\nexport default MyPosts\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\"\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostElement) => {\r\n            dispatch(addPost(newPostElement))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\"\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    render () {\r\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}